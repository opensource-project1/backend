// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int             @id @default(autoincrement())
  email           String          @unique
  password        String
  name            String
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt

  // Relations
  blockedSites    BlockedSite[]
  focusSessions   FocusSession[]
  accessLogs      AccessLog[]
  emergencyRnpequests EmergencyRequest[]
  todos           Todo[]
  userSetting     UserSetting?
}

model BlockedSite {
  id        Int      @id @default(autoincrement())
  url       String
  userId    Int
  createdAt DateTime @default(now())
  startTime DateTime
  endTime DateTime

  user      User     @relation(fields: [userId], references: [id])
}

model FocusSession {
  id        Int      @id @default(autoincrement())
  userId    Int
  startTime DateTime
  endTime   DateTime?
  success   Boolean  @default(true)

  user      User     @relation(fields: [userId], references: [id])
}

model AccessLog {
  id           Int      @id @default(autoincrement())
  userId       Int
  url          String
  accessedAt   DateTime @default(now())
  blocked      Boolean

  user         User     @relation(fields: [userId], references: [id])
}

model EmergencyRequest {
  id          Int      @id @default(autoincrement())
  userId      Int
  reason      String
  requestedAt DateTime @default(now())

  user        User     @relation(fields: [userId], references: [id])
}


model Todo {
  id          Int      @id @default(autoincrement())
  userId      Int
  content     String
  completed   Boolean  @default(false)
  createdAt   DateTime @default(now())

  user        User     @relation(fields: [userId], references: [id])
}

model UserSetting {
  id          Int      @id @default(autoincrement())
  userId      Int      @unique
  theme       String   @default("light")
  timerOption Int      // 예: 기본 타이머 시간(분 단위)
  createdAt   DateTime @default(now())

  user        User     @relation(fields: [userId], references: [id])
}